FUNDAMENTALS OF BACKEND ENGINEERING 

WHAT IS BACKEND ENGINEERING ?
LOGICAL PART OF AN APPLICATION EXCLUDING THE FRONTEND 
WHAT IS AN API?
APPLICATION PROGRAMMING INTERFACE 
IT HELPS APPLICATIONS TO COMMUNICATE WITH EACH OTHER
IN AN API WE USUALLY PASS A REQUEST AND WE GET BACK THE RESPONSE FOR IT 
IMAGE A MUSIC STREAMING API
WE WILL BE JUST PASSING THE NAME OF THE SONG AND THE API WILL PLAY THE SONGS FOR US 


WHAT ARE THE FUNDAMENTAL BUILDING BLOCKS OF BACKEND ENGINEERING


WEBSERVERS
	USED TO ACCEPT HTTP REQUEST AND RETURN BACK HTTP RESPONSE 
	THERE ARE MANY DIFFERENT TYPES OF WEBSERVERS AVAILABLE SOME ARE NGINX HAPROXY APACHE WEBSERVER ETC
	
DATABASES
	USED TO PERSIST DATA. DATA CAN BE STORED IN DIFFERENT FORMATS ACCORDING TO THE TYPE OF DATABASE USED
	IF ITS SQL ITS STORED IN A RELATIONAL FORMAT IN THE FORM OF TABLES AND COLUMNS
	IF ITS NOSQL ITS STORED IN A DOCUMENT MODEL MEANS THE DATA IS STORED AS JSON IN MONGODB THE TYPE OF DOCUMENT STORED IS BSON 
	IF ITS A WIDE COLUMN STORE LIKE APACHE CASSANDRA ITS AN ENTIRELY DIFFERENT CONCEPT I HAVENT YET WENT THAT DEEPER INTO THAT
LOAD BALANCERS
	LOAD BALANCERS ARE IMPORTANT IN SCALING UP A SYSTEM. WHEN THERE IS A SINGLE SERVER HANDLING ALL THE LOADS THERE IS ONLY A SINGLE POINT OF FAILURE
	BUT IF WE USE LOAD BALANCERS THEN WE WOULD BE ABLE TO DISTRIBUTE THE TRAFFIC TO MULTIPLE SERVERS 
	THE TYPE OF LOAD BALANCER ALGO USED WILL BE ACCORDING TO THE REQUIREMENTS OF OUR APPLICATIONS
	EXAMPLES ARE ROUND ROBIN ALGORITHM WHERE TRAFFIC IS EQUALLY DISTIBUTED
	THERE ARE SOME WEIGTHED ALGORITHMS AND STICKY SESSIONS THAT CAN BE USED ACCORDING TO OUR PREFERENCES
	
REVERSE PROXIES
	REVERSE PROXIES FOLLOWS THE SAME CONCEPT AS THE LOAD BALANCER ALSO IN LOAD BALANCER AND REVERSE PROXIES WE WOULD BE ABLE TO IMPLEMENT CACHING AS WELL 
	FAMOUS EXAMPLE OF A REVERSE PROXY IS NGINX 
MESSAGE FORMATS
	CLIENT AND SERVER HAS TO COMMUNICATE AND INORDER FOR THEM TO UNDERSTAND EACH OTHER TTHEY MUST REACH AT A COMMON COMMUNICATION LANGUAGE
	THIS IS WHERE MESSAGE FORMAT COMES INTO PLAY THERE ARE MANY MESSAGE FORMATS THEY ARE
	JSON,GRPC, PLAIN TEXT, PROTOCOL BUFFERS ETC
	
BACKEND FRAMEWORKS
	BACKEND FRAMEWORKS HAVE BOILER PLATE CODE AND HELPER FUNCTION THAT HELPS US TO CREATE THE BACKEND API'S QUICKLY AND EFFICIENTLY 
	THERE ARE MANY BACKEND FRAMEWORKS AVAILABLE
	IN NODE RUN TIME THERE IS EXPRESS
	PYTHON HAS DJANGO
	JAVA HAS SPRING BOOT
		
FUNDAMENTAL CONCEPTS ARE ALL THE SAME THE ONLY DIFFERENCE IS IN THE SYNTAX DIFFERENCE BETWEEN THE FRAMEWORKS 



